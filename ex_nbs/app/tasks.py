"""FrankenUI Tasks Example"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../01_tasks.ipynb.

# %% auto 0
__all__ = ['priority_dd', 'rows_per_page_dd', 'status_dd', 'hotkeys_a', 'hotkeys_b', 'avatar_opts', 'page_heading',
           'table_controls', 'task_columns', 'tasks_table', 'tasks_ui', 'tasks_homepage', 'create_hotkey_li',
           'CreateTaskModal', 'task_dropdown', 'header_render', 'cell_render', 'footer']

# %% ../01_tasks.ipynb
from fasthtml.common import *
import fasthtml.common as fh
from fh_frankenui.core import *
from fh_frankenui.components import *
from fasthtml.svg import *
import json

# %% ../01_tasks.ipynb
with open('data/status_list.json', 'r') as f: data     = json.load(f)
with open('data/statuses.json',    'r') as f: statuses = json.load(f)

# %% ../01_tasks.ipynb
priority_dd = [{'priority': "low", 'count': 36 }, {'priority': "medium", 'count': 33 }, {'priority': "high", 'count': 31 }]

rows_per_page_dd = [10,20,30,40,50]

status_dd = [{'status': "backlog", 'count': 21 },{'status': "todo", 'count': 21 },{'status': "progress", 'count': 20 },{'status': "done",'count': 19 },{'status': "cancelled", 'count': 19 }]


# %% ../01_tasks.ipynb
def create_hotkey_li(hotkey): return NavCloseLi(A(cls='justify-between')(hotkey[0], Span(hotkey[1], cls=TextFont.muted_sm)))

hotkeys_a = (('Profile','⇧⌘P'),('Billing','⌘B'),('Settings','⌘S'),('New Team',''))
hotkeys_b = (('Logout',''), )

# %% ../01_tasks.ipynb
avatar_opts = DropDownNavContainer(
    NavHeaderLi(P('sveltecult'),NavSubtitle('leader@sveltecult.com')),
    NavDividerLi(),
    *map(create_hotkey_li, hotkeys_a),
    NavDividerLi(),
    *map(create_hotkey_li, hotkeys_b),)

# %% ../01_tasks.ipynb
def CreateTaskModal():
    return Modal(
        Div(cls='p-6')(
            ModalTitle('Create Task'),
            P('Fill out the information below to create a new task', cls=TextFont.muted_sm),
            Br(),
            Form(cls='space-y-6')(
                Grid(Div(Select(*map(Option,('Documentation', 'Bug', 'Feature')), label='Task Type', id='task_type')),
                     Div(Select(*map(Option,('In Progress', 'Backlog', 'Todo', 'Cancelled', 'Done')), label='Status', id='task_status')),
                     Div(Select(*map(Option, ('Low', 'Medium', 'High')), label='Priority', id='task_priority'))),
                TextArea(label='Title', placeholder='Please describe the task that needs to be completed'),
                RAlignedDiv(
                    ModalCloseButton('Cancel', cls=ButtonT.ghost),
                    ModalCloseButton('Submit', cls=ButtonT.primary),
                    cls='space-x-5'))),
        id='TaskForm')

# %% ../01_tasks.ipynb
page_heading = FullySpacedDiv(cls='space-y-2')(
            Div(cls='space-y-2')(
                H2('Welcome back!'),P("Here's a list of your tasks for this month!", cls=TextFont.muted_sm)),
            Div(DiceBearAvatar("sveltcult",8,8),avatar_opts))

# %% ../01_tasks.ipynb
table_controls =(Input(cls='w-[250px]',placeholder='Filter task'),
     Button("Status"),
     DropDownNavContainer(map(NavCloseLi,[A(FullySpacedDiv(P(a['status']), P(a['count'])),cls=TextT.capitalize) for a in status_dd])), 
     Button("Priority"),
     DropDownNavContainer(map(NavCloseLi,[A(FullySpacedDiv(LAlignedIconTxt(a['priority'], icon="check"), a['count']),cls=TextT.capitalize) for a in priority_dd])),
     Button("View"),
     DropDownNavContainer(map(NavCloseLi,[A(LAlignedIconTxt(o, icon="check")) for o in ['Title','Status','Priority']])),
     Button('Create Task',cls=(ButtonT.primary, TextFont.bold_sm), uk_toggle="target: #TaskForm"))

# %% ../01_tasks.ipynb
def task_dropdown():
    return Div(Button(UkIcon('more')),
               DropDownNavContainer(
                   map(NavCloseLi,[
                           A('Edit',),
                           A('Make a copy'),
                           A('Favorite',),
                           A(SpacedPP('Delete', '⌘⌫'))])))

# %% ../01_tasks.ipynb
def header_render(col):
    cls = 'p-2 ' + 'uk-table-shrink' if col in ('Done','Actions') else ''
    match col:
        case "Done":    return Th(CheckboxX(), cls=cls)
        case 'Actions': return Th("",       cls=cls)
        case _:         return Th(col, cls=cls)

# %% ../01_tasks.ipynb
def cell_render(col, row):
    def _Td(*args,cls='', **kwargs): return Td(*args, cls=f'p-2 {cls}',**kwargs)
    match col:
        case "Done":  return _Td(shrink=True)(CheckboxX(selected=row['selected']))
        case "Task":  return _Td(row["id"])
        case "Title": return _Td(cls='max-w-[500px] truncate', expand=True)(row["title"], cls='font-medium')
        case "Status" | "Priority": return _Td(cls='uk-text-nowrap uk-text-capitalize')(Span(row[col.lower()]))
        case "Actions": return _Td(cls='uk-table-shrink')(task_dropdown())
        case _: raise ValueError(f"Unknown column: {col}")

# %% ../01_tasks.ipynb
task_columns = ["Done", 'Task', 'Title', 'Status', 'Priority', 'Actions']

tasks_table = Div(cls='uk-overflow-auto mt-4 rounded-md border border-border')(TableFromDicts(
    header_data=task_columns,
    body_data=data,
    body_cell_render=cell_render,
    header_cell_render=header_render,
    sortable=True
))


# %% ../01_tasks.ipynb
def footer():
    hw_cls = 'h-4 w-4'
    return SpaceBetweenDiv(cls='mt-4 px-2 py-2')(
        Div('1 of 100 row(s) selected.', cls='flex-1 text-sm text-muted-foreground'),
        Div(cls='flex flex-none items-center space-x-8')(
            CenteredDiv('Page 1 of 10', cls='w-[100px] text-sm font-medium'),
            LAlignedDiv(
                UkIconButton(cls='hidden lg:inline-flex')(Span('Go to last page', cls='sr-only'),
                    Span(uk_icon='chevron-double-left', cls=hw_cls)),
                UkIconButton(Span('Go to previous page', cls='sr-only'),
                    Span(uk_icon='chevron-left', cls=hw_cls)),
                UkIconButton(Span('Go to next page', cls='sr-only'),
                    Span(uk_icon='chevron-right', cls=hw_cls)),
                UkIconButton(cls='hidden lg:inline-flex')(
                    Span('Go to last page', cls='sr-only'),
                    Span(uk_icon='chevron-double-right', cls=hw_cls)),
            gap=2)))

# %% ../01_tasks.ipynb
tasks_ui = Div(
    SpaceBetweenDiv(cls='mt-8')(
        Div(cls='flex flex-1 gap-4')(table_controls)),
    tasks_table,
    footer(),)

# %% ../01_tasks.ipynb
tasks_homepage = CreateTaskModal(), Div(cls='p-8')(page_heading, tasks_ui)
